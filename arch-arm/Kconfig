menu "ARM architecture configuration"

config CPU_CORTEX_M0
       bool

config CPU_CORTEX_M0_PLUS
       bool

config CPU_CORTEX_M3
       bool

config CPU_ARM926EJS
       bool

config HAS_MEMORY_MODE
	bool

config HAS_CORTEXM_SYSTICKTMR
       bool

config CORTEXM_SYSTICKTMR_USE_EXT_CLOCK
       bool

config NR_INTERRUPTS
       int
       default 64 if MACH_VERSATILE
       default 32

config STACK_ADDR
       hex
       default 0x20003000

config VECTABLE_ALIGNMENT
       int
       default 64

config FAMILY_NRF5X
       bool

config FAMILY
       string
       default "nrf5x" if FAMILY_NRF5X

choice
	prompt "SOC to build for"

config MACH_NONE
       bool "NONE"
       select CPU_CORTEX_M0
       help
	 build for no particular machine

config MACH_KL25Z
       bool "Freescale KL25Z"
       select CPU_CORTEX_M0_PLUS
       select HAVE_RELOCATE_INTERRUPT_TABLE
       select HAS_CORTEXM_SYSTICKTMR
       select HAVE_GPIOS
       select HAVE_GPIO_EVENTS
       select FREESCALE_DRIVERS
       select HAVE_UART
       select HAVE_USB_GENERIC_STACK

config MACH_VERSATILE
       bool "ARM Versatile machine (qemu)"
       select CPU_ARM926EJS
       select AMBA_DRIVERS
       select HAVE_UART
       help
         build for qemu versatile machine

config MACH_NRF51822
       bool "Nordic nrf51822"
       select CPU_CORTEX_M0
       select FAMILY_NRF5X
       select NRF5X_DRIVERS
       select HAVE_UART

endchoice

config THOS_QUARTZ
       int "CPU clock frequency"
       default 12000000 if MACH_KL25Z
       default 16000000 if MACH_VERSATILE

config CPU
       string
       default "cortex-m0" if CPU_CORTEX_M0 || CPU_CORTEX_M0_PLUS
       default "cortex-m3" if CPU_CORTEX_M3
       default "arm926ej-s" if CPU_ARM926EJS

config MACH
       default "none" if MACH_NONE
       default "versatile" if MACH_VERSATILE
       default "kl25z" if MACH_KL25Z
       default "nrf51822" if MACH_NRF51822

if MACH_KL25Z
	source arch-arm/mach-kl25z/Kconfig
endif

if MACH_VERSATILE
	source arch-arm/mach-versatile/Kconfig
endif

if FAMILY_NRF5X
	source arch-arm/family-nrf5x/Kconfig
endif

choice
	prompt "Target board for bathos"

config BOARD_NONE
       bool
	prompt "Build for no particular board"

config BOARD_FREEDOG
       bool
       depends on MACH_KL25Z
        prompt "Build for a KL25Z based freedog board"

config BOARD_RB_51822
        bool
	depends on MACH_NRF51822
	 prompt "Builld for a Redbear NRF51822 board"

endchoice

config BOARD
       default "none" if BOARD_NONE
       default "freedog" if BOARD_FREEDOG
       default "rb-nrf51822" if BOARD_RB_51822


config ENDLESS_LOOP_AT_START
       bool
       prompt "Add an endless loop at machine startup"
       default n
       help
        This can be useful in case you want the machine to delay
        boot until a jtag/cmsis-dap emulator has been connected
	Say N if unsure.

endmenu

choice
	prompt "Index of uart console"
	depends on CONSOLE_UART

config	CONSOLE_UART0
	bool "Console on UART0"
	default n

config  CONSOLE_UART1
	bool "Console on UART1"
	default n

config  CONSOLE_UART2
	bool "Console on UART2"
	default n

config  CONSOLE_UART3
	bool "Console on UART3"
	default n

endchoice


config  CONSOLE_DEV_NAME
	string
	default "uart0" if CONSOLE_UART0
	default "uart1" if CONSOLE_UART1
	default "uart2" if CONSOLE_UART2
	default "uart3" if CONSOLE_UART3

choice
	prompt "Index of stdout UART"
	depends on STDOUT_UART

config  STDOUT_UART0
        bool "Stdout to UART0"
	default n

config  STDOUT_UART1
	bool "Stdout to UART1"
	default n

config  STDOUT_UART2
	bool "Stdout to UART2"
	default n

config  STDOUT_UART3
	bool "Stdout to UART3"
	default n

endchoice

config STDOUT
       string
       default CONSOLE if STDOUT_CONSOLE
       default "uart0" if STDOUT_UART0
       default "uart1" if STDOUT_UART1
       default "uart2" if STDOUT_UART2
       default "uart3" if STDOUT_UART3

choice
	prompt "Index of stdin UART"
	depends on STDIN_UART

config  STDIN_UART0
        bool "Stdin from UART0"
	default n

config  STDIN_UART1
	bool "Stdin from UART1"
	default n

config  STDIN_UART2
	bool "Stdin from UART2"
	default n

config  STDIN_UART3
	bool "Stdin from UART3"
	default n

endchoice

config STDIN
       string
       default CONSOLE if STDIN_CONSOLE
       default "uart0" if STDIN_UART0
       default "uart1" if STDIN_UART1
       default "uart2" if STDIN_UART2
       default "uart3" if STDIN_UART3
