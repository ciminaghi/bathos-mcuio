# This file is sourced by scripts/gen_usb_data when the configured machine is
# a freescale kl25z
#
# $out -> output file path

#set -x

echo "" >> $out
echo '/* KL25 specific usb data */' >> $out
echo "/* Automatically generated by scripts/finish_usb_data_kl25z, sourced by $0 */" >> $out
echo "" >> $out

echo "#include <bathos/usb-device-freescale.h>" >> $out
echo "#include <bathos/bathos.h>" >> $out
echo "" >> $out

echo "static struct usb_device_freescale_ep_ll_data usb_ep_ll_data[$neps + 1];" >> $out

echo "static struct usb_device_endpoint_data usb_ep_data[$neps + 1] = {" >> $out
for i in $(seq 0 $neps) ; do
    echo -e "\t[$i] = { .ll_data = &usb_ep_ll_data[$i], }," >> $out
done
echo "};" >> $out
echo "" >> $out

for i in $(seq 0 15) ; do
    s=$(eval echo "\$ep_${i}_size")
    [ -z "$s" ] && continue
    eval echo "static uint8_t ep_${i}_buf0[\$ep_${i}_size]\;" >> $out
    eval echo "static uint8_t ep_${i}_buf1[\$ep_${i}_size]\;" >> $out
    echo "" >> $out
done

echo \
"struct usb_device_freescale_buf freescale_bufs[] = {" \
    >> $out

for i in $(seq 0 15) ; do
    s=$(eval echo "\$ep_${i}_size")
    [ -z "$s" ] && continue
    echo -e "\t[$i] = {" >> $out
    echo -e "\t\t.buf1 = ep_${i}_buf0," >> $out
    echo -e "\t\t.buf2 = ep_${i}_buf1," >> $out
    echo -e "\t}," >> $out
done

echo "};" >> $out

echo "" >> $out

echo "/* Buffer descriptors table */" >> $out
echo "struct bdt freescale_bdt[ARRAY_SIZE(freescale_bufs) * 2 * 2] \
__attribute__((aligned(512)));" >> $out

echo "" >> $out


echo "struct usb_device_tx_buf tx_bufs_ep0[2];" >> $out

for ep in $eps ; do
    index=$(echo $ep | cut -d ',' -f 1)
    d=$(eval echo "\$ep_${index}_dir")
    if [ "$d" = "in" ] ; then
	echo "struct usb_device_tx_buf tx_bufs_ep${index}[2];" >> $out
    fi
done


echo "/* End of KL25 specific data */" >> $out
