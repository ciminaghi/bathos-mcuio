# This file is sourced by scripts/gen_usb_descr when a cdc-acm is asked for


cdc-acm_end() {
    # Print cdc acm function interfaces
    cat >> $funcheader <<EOF
        /* This file was automatically generated by $0 */
        9,		/* bLength */
        4,		/* bDescriptorType */
        $interface_index,		/* bInterfaceNumber */
        0,		/* bAlternateSetting */
        1,		/* bNumEndpoints */
        0x02,	/* bInterfaceClass */
        0x02,	/* bInterfaceSubClass */
        0x01,	/* bInterfaceProtocol */
        0,		/* iInterface */
        /* CDC Header Functional Descriptor, CDC Spec 5.2.3.1, Table 26 */
        5,		/* bFunctionLength */
        0x24,		/* bDescriptorType */
        0x00,		/* bDescriptorSubtype */
        0x10, 0x01,	/* bcdCDC */
        /* Call Management Functional Descriptor, CDC Spec 5.2.3.2, Table 27 */
        5,		/* bFunctionLength */
        0x24,		/* bDescriptorType */
        0x01,		/* bDescriptorSubtype */
        0x01,		/* bmCapabilities */
        1,		/* bDataInterface */
        /*
         * Abstract Control Management Functional Descriptor,
         * CDC Spec 5.2.3.3, Table 28
         */
        4,		/* bFunctionLength */
        0x24,		/* bDescriptorType */
        0x02,		/* bDescriptorSubtype */
        0x06,		/* bmCapabilities */
        /* Union Functional Descriptor, CDC Spec 5.2.3.8, Table 33 */
        5,		/* bFunctionLength */
        0x24,		/* bDescriptorType */
        0x06,		/* bDescriptorSubtype */
        0,		/* bMasterInterface */
        1,		/* bSlaveInterface0 */
        /* endpoint descriptor, USB spec 9.6.6, page 269-271, Table 9-13 */
        7,		/* bLength */
        5,		/* bDescriptorType */
        $cdc_acm_acm_ep | 0x80,/* bEndpointAddress */
        0x03,		/* bmAttributes (0x03=intr) */
        $cdc_acm_acm_ep_size, 0,/* wMaxPacketSize */
        64,		/* bInterval */
        /* interface descriptor, USB spec 9.6.5, page 267-269, Table 9-12 */
        9,		/* bLength */
        4,		/* bDescriptorType */
        $((interface_index + 1)),		/* bInterfaceNumber */
        0,		/* bAlternateSetting */
        2,		/* bNumEndpoints */
        0x0A,		/* bInterfaceClass */
        0x00,		/* bInterfaceSubClass */
        0x00,		/* bInterfaceProtocol */
        0,		/* iInterface */
        /* endpoint descriptor, USB spec 9.6.6, page 269-271, Table 9-13 */
        7,		/* bLength */
        5,		/* bDescriptorType */
        $cdc_acm_rx_ep, /* bEndpointAddress */
        0x02,		/* bmAttributes (0x02=bulk) */
        $cdc_acm_rx_ep_size, 0,	/* wMaxPacketSize */
        0,		/* bInterval */
        /* endpoint descriptor, USB spec 9.6.6, page 269-271, Table 9-13 */
        7,		/* bLength */
        5,		/* bDescriptorType */
        $cdc_acm_tx_ep | 0x80,/* bEndpointAddress */
        0x02,		/* bmAttributes (0x02=bulk) */
	$cdc_acm_tx_ep_size, 0,	/* wMaxPacketSize */
	0,		/* bInterval */
EOF
    # Update global variables
    # We use 2 interfaces
    interface_index=$((interface_index + 2))
    config_descr_len=$((config_descr_len + 9 + 5 + 5 + 4 + 5 + 7 + 9 + 7 + 7))
    in_eps="$in_eps $cdc_acm_tx_ep,$cdc_acm_tx_ep_size,bulk"
    in_eps="$in_eps $cdc_acm_acm_ep,$cdc_acm_acm_ep_size,interrupt"
    out_eps="$out_eps $cdc_acm_rx_ep,$cdc_acm_rx_ep_size,bulk"
}

cdc_acm_vars=acm_ep\ acm_ep_size\ acm_ep_interval\ rx_ep\ rx_ep_size\ \
tx_ep\ tx_ep_size

process_line_cdc-acm() {
    local v

    for s in $cdc_acm_vars ; do
	if echo $1 | egrep -q "^[[:space:]]*$s[[:space:]]+.*" ; then
	    v=$(echo $1 | awk '{print $2;}')
	    eval export cdc_acm_$s=$v
	    return 0
	fi
    done
    status_end $1 && { cdc-acm_end && return 0 ||  return 1 ; }
}
